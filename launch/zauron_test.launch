<?xml version="1.0"?>
<!--
Description
-->
<launch>
    <arg name="camera_model"          default="0" /> <!-- 0=ZED, 1=ZEDM-->
    <arg name="svo_file"              default="" /><!-- <arg name="svo_file" default="path/to/svo/file.svo"> -->
    <arg name="zed_id"                default="0" />
    <!-- If a ZED SN is given, zed_id is ignored and the wrapper will specifically look for the ZED with the corresponding serial number -->
    <arg name="serial_number"                default="0" /> 

    <!-- GPU ID-->
    <arg name="gpu_id"                default="-1" />
    <!-- Definition coordinate frames -->
    <arg name="publish_tf"            default="false" />
    <arg name="odometry_frame"        default="odom" />
    <arg name="base_frame"            default="zed_center" />
    <arg name="camera_frame"          default="zed_left_camera" />
    <arg name="depth_frame"           default="zed_depth_camera" />
    <!-- Publish urdf zed -->
    <arg name="publish_urdf"          default="false" />
    
    <node name="zed_wrapper_node" pkg="zed_wrapper" type="zed_wrapper_node" output="screen" required="true"><!-- launch-prefix="valgrind" --> 

        <param name="camera_model" value="$(arg camera_model)" />
        <!-- publish odometry frame -->
        <param name="publish_tf"            value="$(arg publish_tf)" />
        <!-- Configuration frame camera -->    
        <param name="odometry_frame"        value="$(arg odometry_frame)" />
        <param name="base_frame"            value="$(arg base_frame)" />
        <param name="camera_frame"          value="$(arg camera_frame)" />
        <param name="depth_frame"           value="$(arg depth_frame)" />
    
        <!-- SVO file path -->
        <param name="svo_filepath"          value="$(arg svo_file)" />

        <!-- ZED parameters -->
        <param name="zed_id"                value="$(arg zed_id)" />
        <param name="serial_number"      value="$(arg serial_number)" />

        <param name="resolution"            value="1" />
        <param name="quality"               value="2" />
        <param name="sensing_mode"          value="0" />
        <param name="frame_rate"            value="10" />
        <param name="odometry_db"           value="" />
        <param name="openni_depth_mode"     value="0" />
        <param name="gpu_id"                value="$(arg gpu_id)" />
        <param name="confidence"            value="100" />
        <param name="gain"                  value="100" />
        <param name="exposure"              value="100" />
        <param name="auto_exposure"         value="true" />
        <param name="depth_stabilization"   value="1" />

        <!-- ROS topic names -->
        <param name="rgb_topic"             value="rgb/image_rect_color" />
        <param name="rgb_raw_topic"         value="rgb/image_raw_color" />
        <param name="rgb_cam_info_topic"    value="rgb/camera_info" />
        <param name="rgb_cam_info_raw_topic"    value="rgb/camera_info_raw" />

        <param name="left_topic"            value="left/image_rect_color" />
        <param name="left_raw_topic"        value="left/image_raw_color" />
        <param name="left_cam_info_topic"   value="left/camera_info" />
        <param name="left_cam_info_raw_topic"   value="left/camera_info_raw" />

        <param name="right_topic"           value="right/image_rect_color" />
        <param name="right_raw_topic"       value="right/image_raw_color" />
        <param name="right_cam_info_topic"  value="right/camera_info" />
        <param name="right_cam_info_raw_topic"  value="right/camera_info_raw" />

        <param name="depth_topic"           value="depth/depth_registered" />
        <param name="depth_cam_info_topic"  value="depth/camera_info" />

        <param name="point_cloud_topic"     value="point_cloud/cloud_registered" />

        <param name="odometry_topic"        value="odom" />

    </node>

    <!-- ROS URDF description of the ZED -->
    <group if="$(arg publish_urdf)">
        <param if="$(arg camera_model)" name="zed_description" textfile="$(find zed_wrapper)/urdf/zedm.urdf" />
        <param unless="$(arg camera_model)" name="zed_description" textfile="$(find zed_wrapper)/urdf/zed.urdf" />
        <node name="zed_state_publisher" pkg="robot_state_publisher" type="state_publisher">
            <remap from="robot_description" to="zed_description" />
        </node>
    </group>

    <!-- Record rosbag -->
    <arg name="record_cameras" default="true" />
    <arg name="recording_name_prefix" default="zed_test"/>
    <node pkg="rosbag" type="record" name="recorder"
        args="record -o /home/ale/$(arg recording_name_prefix)
	/left/image_raw_color/compressed /right/image_raw_color/compressed /left/camera_info_raw /right/camera_info_raw  "
        if="$(arg record_cameras)" />

    <!-- display -->

      <node name="image_view_left" pkg="image_view" type="image_view" output="screen">
          <remap from="image" to="/left/image_raw_color"/>
      </node>
      <node name="image_view_right" pkg="image_view" type="image_view" output="screen">
          <remap from="image" to="/right/image_raw_color"/>
      </node>
      <node name="image_view_depth" pkg="image_view" type="image_view" output="screen">
          <remap from="image" to="/depth/depth_registered"/>
      </node>
        
</launch>
